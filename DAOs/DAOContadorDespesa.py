#######################################################
# 
# DAOContadorDespesa.py
# Python implementation of the Class DAOContadorDespesa
# Generated by Enterprise Architect
# Created on:      15-Apr-2024 9:30:53 PM
# Original author: rlnet
# 
#######################################################
import os, pickle
from DAOs.DAO import DAO
from entidades.ContadorDespesa import ContadorDespesa

class DAOContadorDespesa(DAO):
    def __init__(self, arquivo: str):
        self.__arquivo = arquivo
        self._DAOContadorDespesa__conteudo = []
        try:
            self._DAOContadorDespesa__conteudo = self.__load()
        except FileNotFoundError:
            self._DAOContadorDespesa__conteudo.append(ContadorDespesa())
            self.__dump()
            self.__load()

    @property
    def conteudo(self):
        return self._DAOContadorDespesa__conteudo

    @conteudo.setter
    def conteudo(self, conteudo):
        self._DAOContadorDespesa__conteudo = conteudo
    def read(self) -> int:
        return self.conteudo[0].valor

    def update(self):
        self.conteudo[0].valor += 1
        self.__dump()
        self.__load()
        return self.conteudo[0].valor

    def __dump(self):
        with open(self.__arquivo, 'wb') as arquivo:
            pickle.dump(self.conteudo, arquivo)

    def __load(self):
        with open(self.__arquivo, 'rb') as arquivo:
            self.conteudo = pickle.load(arquivo)
        return self.conteudo