#######################################################
# 
# TelaPlataformas.py
# Python implementation of the Class TelaPlataformas
# Generated by Enterprise Architect
# Created on:      15-Apr-2024 9:30:54 PM
# Original author: rlnet
# 
#######################################################
from limites.Tela import Tela
import PySimpleGUI as sg

class TelaPlataformas(Tela):


    def __init__(self):
        super().__init__()
        self.__window = None

    def abrir_menu(self):
        sg.theme('Reddit')
        column1 = [[sg.Radio('Cadastrar plataformas', group_id='Plataformas',font=("Helvetica", 15), key=self.C_PLATAFORMAS)],
                     [sg.Radio('Exibir plataformas', group_id='Plataformas',font=("Helvetica", 15), key=self.R_PLATAFORMAS)],
                     [sg.Radio('Alterar plataformas', group_id='Plataformas',font=("Helvetica", 15), key=self.U_PLATAFORMAS)],
                     [sg.Radio('Excluir plataformas', group_id='Plataformas',font=("Helvetica", 15), key=self.D_PLATAFORMAS)]]

        layout = [[sg.Text('Sobre Plataformas', font=("Helvetica", 20), pad=((50,200),(30,30)))],
                    [sg.Column(column1, pad=(30, 30))],
                    [[sg.Button(button_text=('Voltar'), key=self.VOLTAR, pad=(20, 20), button_color=('white', 'red')), sg.Button('Confirmar', pad=(0, 20), key='PROSSEGUIR')]]
                  ]
        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button == 'VOLTAR' or button is None:
            self.__window.Close()
            return None
        else:
            for key in values:
                if values[key]:
                    escolha = key
                    self.__window.Close()
                    return escolha
            self.__window.Close()
            return None

    def selecionar_plataforma(self, plataformas):
        sg.theme('Reddit')

        dados = [[plataforma.titulo, plataforma.desc, plataforma.id] for plataforma in plataformas]

        colunas = ['Título', 'Descrição', 'ID']

        layout = [
            [sg.Text('Lista Plataformas:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Table(values=dados, headings=colunas, display_row_numbers=False,
                      auto_size_columns=False, num_rows=min(25, len(dados)), pad=(30, 30), col_widths=[15, 30, 10])],
            [sg.Text('Digite o ID da plataforma que deseja alterar:', pad=(30, 20))],
            [[sg.Text('ID:', pad=(30, 20)), sg.Input(key='id', pad=(30, 20))]],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red')), sg.Button('Confirmar', pad=(0, 30))]
        ]

        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button is None or button == 'Voltar':
            self.__window.Close()
            return None
        else:
            self.__window.Close()
            for item in plataformas:
                if item.id == int(values['id']):
                    return self.alterar_plataforma(item)

    def alterar_plataforma(self, plataforma_selec):
        sg.theme('Reddit')
        layout = [
            [sg.Text('Alterar Plataforma:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Text('Título:', font=("Helvetica", 15), ), sg.Input(key='titulo', pad=(45, 0), default_text=plataforma_selec.titulo)],
            [sg.Text('Descrição:', font=("Helvetica", 15), ), sg.Input(key='descricao', default_text=plataforma_selec.desc)],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red')), sg.Button('Confirmar', pad=(0, 30))]
        ]
        self.__window = sg.Window('Alterar plataforma:').Layout(layout)
        button, values = self.__window.Read()
        self.close()
        if button == 'Confirmar':
            return values['titulo'], values['descricao'], plataforma_selec.id
        else:
            return None, None

    def cadastrar_plataforma(self):
        sg.theme('Reddit')
        column1 = [[sg.Text('Titulo:', font=("Helvetica", 15), ), sg.Input(key='titulo', pad=(45, 0) )],
                   [sg.Text('Descrição:', font=("Helvetica", 15), ), sg.Input(key='descricao', )]]
        layout = [
            [sg.Column([[sg.Text('Cadastrar Plataforma:', font=("Helvetica", 20))]],
                       pad=(30, 20))],
            [sg.Column(column1, pad=(30, 30))],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red'), key=self.VOLTAR),
             sg.Button('Confirmar', pad=(0, 30), key=self.PROSSEGUIR)]
        ]
        self.__window = sg.Window('Cadastrar Plataforma').Layout(layout)
        button, values = self.__window.Read()
        self.close()
        if button == self.PROSSEGUIR:
            return values['titulo'], values['descricao']
        else:
            return None, None

    def excluir_plataforma(self, plataformas):
        sg.theme('Reddit')

        dados = [[plataforma.titulo, plataforma.desc, plataforma.id] for plataforma in plataformas]

        colunas = ['Título', 'Descrição', 'ID']

        layout = [
            [sg.Text('Lista Plataformas:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Table(values=dados, headings=colunas, display_row_numbers=False,
                      auto_size_columns=False, num_rows=min(25, len(dados)), pad=(30, 30), col_widths=[15, 30, 10])],
            [sg.Text('Digite o ID da plataforma que deseja excluir:', pad=(30, 20))],
            [[sg.Text('ID:', pad=(30, 20)), sg.Input(key='id', pad=(30, 20))]],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red')), sg.Button('Confirmar', pad=(0, 30))]
        ]

        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button is None or button == 'Voltar':
            self.__window.Close()
            return None
        else:
            self.__window.Close()
            return values['id']

    def exibir_plataformas(self, plataformas):
        sg.theme('Reddit')

        dados = [[plataforma.titulo, plataforma.desc, plataforma.id] for plataforma in plataformas]

        colunas = ['Título', 'Descrição', 'ID']

        layout = [
            [sg.Text('Lista Plataformas:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Table(values=dados, headings=colunas, display_row_numbers=False,
                      auto_size_columns=False, num_rows=min(25, len(dados)), pad=(30, 30), col_widths=[15, 30, 10])],
            [sg.Button('Ok', pad=(30, 30))]
        ]

        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button is None or button == 'Ok':
            self.__window.Close()
            return None
        self.__window.Close()
        return None

    def close(self):
        self.__window.Close()
        self.__window = None
