#######################################################
# 
# TelaSaques.py
# Python implementation of the Class TelaSaques
# Generated by Enterprise Architect
# Created on:      15-Apr-2024 9:30:54 PM
# Original author: rlnet
# 
#######################################################
from limites.Tela import Tela
import PySimpleGUI as sg 

class TelaSaques(Tela):
    C_SAQUES = "C_SAQUES"
    R_SAQUES = "R_SAQUES"
    D_SAQUES = "D_SAQUES"
    SAQUES = "SAQUES"
    VOLTAR = "VOLTAR"
    PROSSEGUIR = "PROSSEGUIR"

    def __init__(self):
        super().__init__()
        self.__window = None

    def abrir_menu(self):
        sg.theme('Reddit')
        column1 = [[sg.Radio('Cadastrar saques', group_id='Saques', font=("Helvetica", 15), key=self.C_SAQUES)],
                   [sg.Radio('Exibir saques', group_id='Saques', font=("Helvetica", 15), key=self.R_SAQUES)],
                   [sg.Radio('Excluir saques', group_id='Saques', font=("Helvetica", 15), key=self.D_SAQUES)]]

        layout = [[sg.Text('Sobre Saques', font=("Helvetica", 20), pad=((50, 200), (30, 30)))],
                  [sg.Column(column1, pad=(30, 30))],
                  [sg.Button('Voltar', key=self.VOLTAR, pad=(20, 20), button_color=('white', 'red')), 
                   sg.Button('Confirmar', key=self.PROSSEGUIR, pad=(0, 20))]]
        
        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button == self.VOLTAR or button is None:
            self.__window.Close()
            return None
        else:
            for key in values:
                if values[key]:
                    escolha = key
                    self.__window.Close()
                    return escolha
            self.__window.Close()
            return None

    def cadastrar_saques(self):
        sg.theme('Reddit')

        layout = [
            [sg.Text('Valor:', font=("Helvetica", 15)), sg.InputText(key='valor')],
            [sg.Text('Data:', font=("Helvetica", 15)), sg.InputText('', key="data", size=(61, 1), disabled=True), sg.CalendarButton("Calendário", target="data", format="%d/%m/%Y")],
            [sg.Text('Observação:', font=("Helvetica", 15)), sg.InputText(key='obs')],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red'), key=self.VOLTAR),
             sg.Button('Confirmar', pad=(0, 30), key=self.PROSSEGUIR)]
        ]

        self.__window = sg.Window('Cadastrar Saque').Layout(layout)
        button, values = self.__window.Read()
        self.close()
        if button == self.PROSSEGUIR:
            data = str(values['data'])
            valor = values['valor'].replace(',', '.') if values['valor'] else None
            obs = values["obs"]
            return valor, obs, data
        else:
            return None, None, None

    def exibir_saques(self, saques):
        sg.theme('Reddit')

        dados = [[saque.valor, saque.obs, saque.data, saque.id] for saque in saques]

        colunas = ['Valor', 'Observação', 'Data', 'ID']

        layout = [
            [sg.Text('Lista Saques:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Table(values=dados, headings=colunas, display_row_numbers=False,
                      auto_size_columns=False, num_rows=min(25, len(dados)), pad=(30, 30), col_widths=[10, 20, 20, 15])],
            [sg.Button('Ok', pad=(30, 30))]
        ]

        self.__window = sg.Window('RBR Imóveis').Layout(layout)
        button, values = self.__window.Read()
        if button is None or button == 'Ok':
            self.__window.Close()
            return None
        self.__window.Close()
        return None

    def excluir_saques(self, saques):
        sg.theme('Reddit')

        dados = [[saque.valor, saque.obs, saque.data, saque.id] for saque in saques]

        colunas = ['Valor', 'Observação', 'Data', 'ID']

        layout = [
            [sg.Text('Lista Saques:', font=("Helvetica", 20), pad=(30, 20))],
            [sg.Table(values=dados, headings=colunas, display_row_numbers=False,
                      auto_size_columns=False, num_rows=min(25, len(dados)), pad=(30, 30),
                      col_widths=[10, 20, 20, 10], key='-TABLE-', enable_events=True)],
            [sg.Text('Digite o ID do saque que deseja excluir:', font=("Helvetica", 15), pad=(30, 20))],
            [sg.Text('ID:', font=("Helvetica", 15), pad=(30, 20)), sg.Input(key='id', pad=(30, 20))],
            [sg.Button('Voltar', pad=(30, 30), button_color=('white', 'red')), sg.Button('Excluir', pad=(0, 30))]
        ]

        self.__window = sg.Window('RBR Imóveis').Layout(layout)

        while True:
            event, values = self.__window.Read()
            if event is None or event == 'Voltar':
                self.__window.Close()
                return None
            elif event == '-TABLE-':
                if values['-TABLE-']:
                    selected_row_index = values['-TABLE-'][0]
                    selected_saques_id = dados[selected_row_index][3]  # Corrigido para acessar o ID corretamente
                    self.__window['id'].update(selected_saques_id)
            elif event == 'Excluir':
                self.__window.Close()
                return values['id']

    def close(self):
        if self.__window:
            self.__window.Close()
            self.__window = None
